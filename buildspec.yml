version: 0.2

env:
  variables:
    S3_BUCKET: code-bachlmayr
    PACKAGE: "github.com/gezza-b/fetchgo"

phases:
  install:
    commands:
      - echo starting the install phase 
      # copy application source code into that directory structure.
      - mkdir -p "/go/src/$(dirname ${PACKAGE})"
      - ln -s "${CODEBUILD_SRC_DIR}" "/go/src/${PACKAGE}" 
      
      # Print all environment variables (handy for AWS CodeBuild logs)
      - env

    finally:
      - echo end of install phase
      
  pre_build: 
    commands:
      - echo starting the pre-build phase
      # Make sure we're in the project directory within our GOPATH
      - cd "/go/src/${PACKAGE}"

      # Fetch all dependencies
      - go get -t ./...

    finally:
      - echo end of pre-build phase

  build:
    commands:
      - echo starting the build phase
      # Build application
      - cd "/go/src/${PACKAGE}"

      - go build -a src/fetch.go
      #- go build -o fetch

      # Package our application with AWS SAM
      - echo start packaging ${S3_BUCKET}
      #- aws cloudformation package --template-file template-lambda.yml --s3-bucket ${S3_BUCKET} --output-template-file s3://code-bachlmayr/packaged.yml
      - aws cloudformation package --template-file template-sam.yml --s3-bucket ${S3_BUCKET} --output-template-file s3://code-bachlmayr/packaged.yml
     
      # copy CFN template
      - echo start copying ${CODEBUILD_SRC_DIR}/template-lambda.yml
      #- aws s3 cp ${CODEBUILD_SRC_DIR}/template-lambda.yml s3://code-bachlmayr/template-lambda.yml

    
    finally:
      - echo end of build phase

  post_build:
    commands:
      - echo starting the post_build phase, but not really
      #- aws cloudformation create-stack --stack-name fetch --template-url https://s3-ap-southeast-2.amazonaws.com/code-bachlmayr/template-lambda.yml --capabilities CAPABILITY_IAM
    finally:
      - echo end of post_build phase

artifacts:
  files:
    - packaged.yml
    - fetch